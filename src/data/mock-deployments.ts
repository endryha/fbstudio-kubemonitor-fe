import { add, sub } from 'date-fns';
import type { DeploymentAggregate } from '@/types/deployment';

const now = new Date();

export const mockDeployments: DeploymentAggregate[] = [
  {
    id: 'd-1',
    status: 'DEPLOYED',
    category: 'SERVICE',
    manifest: {
      name: 'user-service',
      appVersion: '1.2.3',
      chartVersion: '0.5.0',
      chartRepository: 'https://charts.example.com/',
    },
    helm: {
      name: 'user-service-prod',
      description: 'Handles user authentication and profiles.',
      chartName: 'generic-service',
      chartVersion: '0.5.0',
      appVersion: '1.2.3',
      status: 'deployed',
      firstDeployed: sub(now, { days: 90 }).toISOString(),
      lastDeployed: sub(now, { hours: 2 }).toISOString(),
      k8sResource: {
        namespace: 'prod-services',
        resourceName: 'user-service-prod-deployment',
        resourceVersion: '5',
        resourceUID: 'abc-123',
        resourceType: 'Deployment',
        creationTimestamp: sub(now, { days: 90 }).toISOString(),
      },
    },
  },
  {
    id: 'd-2',
    status: 'FAILED',
    category: 'SERVICE',
    manifest: {
      name: 'payment-gateway',
      appVersion: '2.1.0',
      chartVersion: '1.1.0',
      chartRepository: 'https://charts.example.com/',
    },
    helm: {
      name: 'payment-gateway-staging',
      description: 'Processes credit card payments.',
      chartName: 'payment-service',
      chartVersion: '1.1.0',
      appVersion: '2.1.0',
      status: 'failed',
      firstDeployed: sub(now, { days: 20 }).toISOString(),
      lastDeployed: sub(now, { minutes: 15 }).toISOString(),
      k8sResource: {
        namespace: 'staging',
        resourceName: 'payment-gateway-staging-pod-xyz',
        resourceVersion: '12',
        resourceUID: 'def-456',
        resourceType: 'Pod',
        creationTimestamp: sub(now, { days: 20 }).toISOString(),
      },
    },
  },
  {
    id: 'd-3',
    status: 'PENDING_DEPLOYMENT',
    category: 'SERVICE',
    manifest: {
      name: 'notification-service',
      appVersion: '3.0.0-beta1',
      chartVersion: '0.2.0',
      chartRepository: 'https://charts.example.com/',
    },
    helm: {
      name: 'notification-service-dev',
      description: 'Sends push notifications and emails.',
      chartName: 'notification-engine',
      chartVersion: '0.2.0',
      appVersion: '3.0.0-beta1',
      status: 'pending-install',
      firstDeployed: now.toISOString(),
      lastDeployed: now.toISOString(),
      k8sResource: {
        namespace: 'dev',
        resourceName: 'notification-service-dev-job',
        resourceVersion: '1',
        resourceUID: 'ghi-789',
        resourceType: 'Job',
        creationTimestamp: now.toISOString(),
      },
    },
  },
  {
    id: 'd-4',
    status: 'DEPLOYED',
    category: 'INFRASTRUCTURE',
    manifest: {
      name: 'prometheus-stack',
      appVersion: 'v2.26.0',
      chartVersion: '15.4.3',
      chartRepository: 'https://prometheus-community.github.io/helm-charts',
    },
    helm: {
      name: 'monitoring',
      description: 'Prometheus monitoring stack for cluster metrics.',
      chartName: 'kube-prometheus-stack',
      chartVersion: '15.4.3',
      appVersion: 'v2.26.0',
      status: 'deployed',
      firstDeployed: sub(now, { days: 200 }).toISOString(),
      lastDeployed: sub(now, { days: 5 }).toISOString(),
      k8sResource: {
        namespace: 'monitoring',
        resourceName: 'monitoring-prometheus-statefulset',
        resourceVersion: '8',
        resourceUID: 'jkl-012',
        resourceType: 'StatefulSet',
        creationTimestamp: sub(now, { days: 200 }).toISOString(),
      },
    },
  },
  {
    id: 'd-5',
    status: 'DEPLOYED',
    category: 'INFRASTRUCTURE',
    manifest: {
      name: 'cert-manager',
      appVersion: 'v1.5.3',
      chartVersion: 'v1.5.3',
      chartRepository: 'https://charts.jetstack.io',
    },
    helm: {
      name: 'cert-manager',
      description: 'Automated certificate management.',
      chartName: 'cert-manager',
      chartVersion: 'v1.5.3',
      appVersion: 'v1.5.3',
      status: 'deployed',
      firstDeployed: sub(now, { days: 365 }).toISOString(),
      lastDeployed: sub(now, { days: 30 }).toISOString(),
      k8sResource: {
        namespace: 'cert-manager',
        resourceName: 'cert-manager-webhook-deployment',
        resourceVersion: '4',
        resourceUID: 'mno-345',
        resourceType: 'Deployment',
        creationTimestamp: sub(now, { days: 365 }).toISOString(),
      },
    },
  },
    {
    id: 'd-6',
    status: 'DEPLOYED',
    category: 'SERVICE',
    manifest: {
      name: 'product-catalog',
      appVersion: '4.5.1',
      chartVersion: '2.0.0',
      chartRepository: 'https://charts.example.com/',
    },
    helm: {
      name: 'product-catalog-prod',
      description: 'Manages all product information and inventory.',
      chartName: 'e-commerce-service',
      chartVersion: '2.0.0',
      appVersion: '4.5.1',
      status: 'deployed',
      firstDeployed: sub(now, { days: 150 }).toISOString(),
      lastDeployed: sub(now, { days: 1 }).toISOString(),
      k8sResource: {
        namespace: 'prod-services',
        resourceName: 'product-catalog-prod-deployment',
        resourceVersion: '10',
        resourceUID: 'pqr-678',
        resourceType: 'Deployment',
        creationTimestamp: sub(now, { days: 150 }).toISOString(),
      },
    },
  },
  {
    id: 'd-7',
    status: 'FAILED',
    category: 'INFRASTRUCTURE',
    manifest: {
      name: 'loki-stack',
      appVersion: '2.4.1',
      chartVersion: '2.6.2',
      chartRepository: 'https://grafana.github.io/helm-charts',
    },
    helm: {
      name: 'logging',
      description: 'Centralized logging with Loki.',
      chartName: 'loki-stack',
      chartVersion: '2.6.2',
      appVersion: '2.4.1',
      status: 'failed',
      firstDeployed: sub(now, { days: 45 }).toISOString(),
      lastDeployed: sub(now, { hours: 1 }).toISOString(),
      k8sResource: {
        namespace: 'logging',
        resourceName: 'logging-loki-statefulset',
        resourceVersion: '3',
        resourceUID: 'stu-901',
        resourceType: 'StatefulSet',
        creationTimestamp: sub(now, { days: 45 }).toISOString(),
      },
    },
  },
];
